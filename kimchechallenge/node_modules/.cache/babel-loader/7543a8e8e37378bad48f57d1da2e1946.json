{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/GetCountries/GetCountries.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LIST_COUNTRIES } from \"../../GraphQL/Queries\";\n\nconst GetCountries = () => {\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LIST_COUNTRIES);\n  const [countries, setCountries] = useState([]);\n  const test = [];\n  useEffect(() => {\n    if (data) {\n      data.countries.map(country => test.push(country));\n    }\n\n    setCountries(test);\n    console.log(countries);\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default GetCountries;","map":{"version":3,"sources":["/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/GetCountries/GetCountries.js"],"names":["React","useEffect","useState","useQuery","gql","LIST_COUNTRIES","GetCountries","error","loading","data","countries","setCountries","test","map","country","push","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;AACA,SAAQC,cAAR,QAA6B,uBAA7B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAAyBN,QAAQ,CAACE,cAAD,CAAvC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMU,IAAI,GAAG,EAAb;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,IAAJ,EAAU;AACVA,MAAAA,IAAI,CAACC,SAAL,CAAeG,GAAf,CAAmBC,OAAO,IACtBF,IAAI,CAACG,IAAL,CAAUD,OAAV,CADJ;AAGC;;AACDH,IAAAA,YAAY,CAACC,IAAD,CAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACH,GARQ,EAQN,CAACD,IAAD,CARM,CAAT;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH,CAvBD;;AAwBA,eAAeH,YAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useQuery, gql} from \"@apollo/client\";\nimport {LIST_COUNTRIES} from \"../../GraphQL/Queries\";\n\nconst GetCountries = () => {\n    const {error, loading, data} = useQuery(LIST_COUNTRIES);\n    const [countries, setCountries] = useState([]);\n\n    const test = [];\n\n    useEffect(() => {\n        if (data) {\n        data.countries.map(country => (\n            test.push(country)\n        ))\n        }\n        setCountries(test);\n        console.log(countries);\n    }, [data])\n\n    return(\n        <div> \n            {/* {data.countries.map((val) => {\n            return <span> {val.name} </span> \n            })}  */}\n        </div>\n    ) \n};\nexport default GetCountries;"]},"metadata":{},"sourceType":"module"}
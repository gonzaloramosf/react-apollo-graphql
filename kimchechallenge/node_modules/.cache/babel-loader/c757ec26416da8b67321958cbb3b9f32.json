{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/CountrySearch/CountrySearch.js\";\nimport React, { useState } from \"react\";\nimport \"./CountrySearch.css\";\n\nconst CountrySearch = ({\n  countries\n}) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const HandleGroupByContinent = () => {\n    country.reduce((res, c) => {\n      if (!res[c.continent.name]) {\n        res[c.continent.name] = [];\n      }\n\n      res[c.continent.name].push(c);\n      console.log(res);\n    });\n  }; // const HandleGroupByLanguage = (val) => {\n  //  \n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Country Search\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \" Some random text \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search country...\",\n    onChange: event => {\n      setSearchTerm(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"groupBy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \" Group by: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \" Continent \"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \" Language \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, countries.filter(val => {\n    if (searchTerm === \"\") {\n      return \"\";\n    } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n      setCountry(val);\n      HandleGroupByContinent();\n    }\n  }))));\n};\n\nexport default CountrySearch;\n{\n  /* \n  <div className=\"search\">\n  <h1>Country Search</h1>\n  <span> Some random text </span>\n  <div className=\"searchResults\">\n     <input type=\"text\" placeholder=\"Search country...\" onChange={event => {\n         setSearchTerm(event.target.value)\n     }}/>\n     <div className=\"groupBy\">\n         <h2> Group by: </h2>\n         <div>\n             <button> Continent </button>\n             <button> Language </button>\n         </div>\n     </div>\n      <div>\n         {countries.filter((val) => {\n             if (searchTerm === \"\") {\n                 return \"\"\n             } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                 return val\n             }\n         }).map((val, key) => {\n             return (\n                 <div key={key}>\n                     <h2> {val.continent.name} </h2> \n                     <div className=\"countryInfo\">\n                         <div>\n                             <span>{val.emoji}</span>\n                             <h3> {val.name} </h3>\n                         </div>\n                         <p> Capital: {val.capital} </p>\n                         <p> Currency: {val.currency} </p>\n                     </div>\n                 </div>\n             )\n         })\n         }\n     </div>\n  </div>\n  </div> */\n}","map":{"version":3,"sources":["/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/CountrySearch/CountrySearch.js"],"names":["React","useState","CountrySearch","countries","searchTerm","setSearchTerm","country","setCountry","HandleGroupByContinent","reduce","res","c","continent","name","push","console","log","event","target","value","filter","val","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AACrC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,sBAAsB,GAAG,MAAM;AACnCF,IAAAA,OAAO,CAACG,MAAR,CAAe,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzB,UAAI,CAACD,GAAG,CAACC,CAAC,CAACC,SAAF,CAAYC,IAAb,CAAR,EAA4B;AAC1BH,QAAAA,GAAG,CAACC,CAAC,CAACC,SAAF,CAAYC,IAAb,CAAH,GAAwB,EAAxB;AACD;;AACDH,MAAAA,GAAG,CAACC,CAAC,CAACC,SAAF,CAAYC,IAAb,CAAH,CAAsBC,IAAtB,CAA2BH,CAA3B;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACD,KAPD;AAQD,GATD,CAJqC,CAerC;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,mBAA/B;AAAmD,IAAA,QAAQ,EAAEO,KAAK,IAAI;AAClEZ,MAAAA,aAAa,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAFJ,CAJF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,SAAS,CAACiB,MAAV,CAAkBC,GAAD,IAAS;AACzB,QAAIjB,UAAU,KAAK,EAAnB,EAAuB;AACrB,aAAO,EAAP;AACD,KAFD,MAEO,IAAIiB,GAAG,CAACR,IAAJ,CAASS,WAAT,GAAuBC,QAAvB,CAAgCnB,UAAU,CAACkB,WAAX,EAAhC,CAAJ,EAA8D;AACnEf,MAAAA,UAAU,CAACc,GAAD,CAAV;AACAb,MAAAA,sBAAsB;AACvB;AACF,GAPA,CADL,CAXF,CAHF,CADF;AA6BD,CAhDD;;AAiDA,eAAeN,aAAf;AAQA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCS","sourcesContent":["import React, { useState } from \"react\";\nimport \"./CountrySearch.css\";\n\nconst CountrySearch = ({countries}) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const HandleGroupByContinent = () => {\n    country.reduce((res, c) => {\n      if (!res[c.continent.name]) {\n        res[c.continent.name] = [];\n      }\n      res[c.continent.name].push(c);\n      \n      console.log(res);\n    })\n  }\n\n  // const HandleGroupByLanguage = (val) => {\n  //  \n  // }\n\n  return (\n    <div className=\"search\">\n      <h1>Country Search</h1>\n      <span> Some random text </span>\n      <div className=\"searchResults\">\n        <input type=\"text\" placeholder=\"Search country...\" onChange={event => {\n            setSearchTerm(event.target.value)\n        }}/>\n        <div className=\"groupBy\">\n            <h2> Group by: </h2>\n            <div>\n                <button> Continent </button>\n                <button> Language </button>\n            </div>\n        </div>\n        <div>\n            {countries.filter((val) => {\n              if (searchTerm === \"\") {\n                return \"\"\n              } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                setCountry(val)\n                HandleGroupByContinent();\n              }\n            })\n            }\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default CountrySearch;\n\n\n\n\n\n\n\n{/* \n<div className=\"search\">\n<h1>Country Search</h1>\n<span> Some random text </span>\n<div className=\"searchResults\">\n    <input type=\"text\" placeholder=\"Search country...\" onChange={event => {\n        setSearchTerm(event.target.value)\n    }}/>\n    <div className=\"groupBy\">\n        <h2> Group by: </h2>\n        <div>\n            <button> Continent </button>\n            <button> Language </button>\n        </div>\n    </div>\n\n    <div>\n        {countries.filter((val) => {\n            if (searchTerm === \"\") {\n                return \"\"\n            } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                return val\n            }\n        }).map((val, key) => {\n            return (\n                <div key={key}>\n                    <h2> {val.continent.name} </h2> \n                    <div className=\"countryInfo\">\n                        <div>\n                            <span>{val.emoji}</span>\n                            <h3> {val.name} </h3>\n                        </div>\n                        <p> Capital: {val.capital} </p>\n                        <p> Currency: {val.currency} </p>\n                    </div>\n                </div>\n            )\n        })\n        }\n    </div>\n</div>\n</div> */}"]},"metadata":{},"sourceType":"module"}
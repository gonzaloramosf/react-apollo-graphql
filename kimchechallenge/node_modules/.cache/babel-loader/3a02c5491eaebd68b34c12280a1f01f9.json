{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/CountrySearch/CountrySearch.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./CountrySearch.css\";\n\nconst CountrySearch = ({\n  countries\n}) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [byContinent, setByContinent] = useState(false);\n  const [byLanguage, setByLanguage] = useState(false);\n  const [toSort, setToSort] = useState([]);\n  console.log(countries);\n  useEffect(() => {}, [toSort]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Country Search\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \" Some random text \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search country...\",\n    onChange: event => {\n      setSearchTerm(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"groupBy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \" Group by: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setByContinent(true);\n      setByLanguage(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \" Continent \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setByLanguage(true);\n      setByContinent(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \" Language \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, countries.filter(val => {\n    if (searchTerm === \"\") {\n      return \"\";\n    } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return setToSort(val);\n    }\n\n    console.log(toSort); // }).map((val, key) => {\n    //     return (\n    //         <div key={key}>\n    //             <h2> {val.continent.name} </h2> \n    //             <div className=\"countryInfo\">\n    //                 <div>\n    //                     <span>{val.emoji}</span>\n    //                     <h3> {val.name} </h3>\n    //                 </div>\n    //                 <p> Capital: {val.capital} </p>\n    //                 <p> Currency: {val.currency} </p>\n    //             </div>\n    //         </div>\n    //     )\n    // })\n  }))));\n};\n\nexport default CountrySearch;\n{\n  /* <div className=\"search\">\n  <h1>Country Search</h1>\n  <span> Some random text </span>\n  <div className=\"searchResults\">\n     <input type=\"text\" placeholder=\"Search country...\" onChange={event => {\n         setSearchTerm(event.target.value)\n     }}/>\n     <div className=\"groupBy\">\n         <h2> Group by: </h2>\n         <div>\n             <button> Continent </button>\n             <button> Language </button>\n         </div>\n     </div>\n      <div>\n         {countries.filter((val) => {\n             if (searchTerm === \"\") {\n                 return \"\"\n             } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                 return val\n             }\n         }).map((val, key) => {\n             return (\n                 <div key={key}>\n                     <h2> {val.continent.name} </h2> \n                     <div className=\"countryInfo\">\n                         <div>\n                             <span>{val.emoji}</span>\n                             <h3> {val.name} </h3>\n                         </div>\n                         <p> Capital: {val.capital} </p>\n                         <p> Currency: {val.currency} </p>\n                     </div>\n                 </div>\n             )\n         })\n         }\n     </div>\n  </div>\n  </div> */\n}","map":{"version":3,"sources":["/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/CountrySearch/CountrySearch.js"],"names":["React","useEffect","useState","CountrySearch","countries","searchTerm","setSearchTerm","byContinent","setByContinent","byLanguage","setByLanguage","toSort","setToSort","console","log","event","target","value","filter","val","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACAH,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACU,MAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,mBAA/B;AAAmD,IAAA,QAAQ,EAAEI,KAAK,IAAI;AAClET,MAAAA,aAAa,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBT,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AAAqB,KAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,MAAAA,cAAc,CAAC,KAAD,CAAd;AACC,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CAFJ,CAJJ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,SAAS,CAACc,MAAV,CAAkBC,GAAD,IAAS;AACvB,QAAId,UAAU,KAAK,EAAnB,EAAuB;AACnB,aAAO,EAAP;AACH,KAFD,MAEO,IAAIc,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCjB,UAAU,CAACgB,WAAX,EAAhC,CAAJ,EAA8D;AACjE,aAAOT,SAAS,CAACO,GAAD,CAAhB;AACH;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EANuB,CAOvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAtBA,CADL,CAlBJ,CAHJ,CADJ;AAmDH,CA9DD;;AA+DA,eAAeR,aAAf;AAQA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCS","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CountrySearch.css\";\n\nconst CountrySearch = ({countries}) => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [byContinent, setByContinent] = useState(false);\n    const [byLanguage, setByLanguage] = useState(false);\n    const [toSort, setToSort] = useState([]);\n\n    console.log(countries);\n    useEffect(() => {\n        \n    }, [toSort])\n\n    return (\n        <div className=\"search\">\n            <h1>Country Search</h1>\n            <span> Some random text </span>\n            <div className=\"searchResults\">\n                <input type=\"text\" placeholder=\"Search country...\" onChange={event => {\n                    setSearchTerm(event.target.value)\n                }}/>\n                <div className=\"groupBy\">\n                    <h2> Group by: </h2>\n                    <div>\n                        <button onClick={() => {\n                            setByContinent(true) \n                            setByLanguage(false)}}> Continent </button>\n                        \n                        <button onClick={() => {\n                            setByLanguage(true);\n                            setByContinent(false);\n                            }}> Language </button>\n                    </div>\n                </div>\n\n                <div>\n                    {countries.filter((val) => {\n                        if (searchTerm === \"\") {\n                            return \"\"\n                        } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                            return setToSort(val)\n                        }\n                        console.log(toSort)\n                        // }).map((val, key) => {\n                        //     return (\n                        //         <div key={key}>\n                        //             <h2> {val.continent.name} </h2> \n                        //             <div className=\"countryInfo\">\n                        //                 <div>\n                        //                     <span>{val.emoji}</span>\n                        //                     <h3> {val.name} </h3>\n                        //                 </div>\n                        //                 <p> Capital: {val.capital} </p>\n                        //                 <p> Currency: {val.currency} </p>\n                        //             </div>\n                        //         </div>\n                        //     )\n                        // })\n                    })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default CountrySearch;\n\n\n\n\n\n\n\n{/* <div className=\"search\">\n<h1>Country Search</h1>\n<span> Some random text </span>\n<div className=\"searchResults\">\n    <input type=\"text\" placeholder=\"Search country...\" onChange={event => {\n        setSearchTerm(event.target.value)\n    }}/>\n    <div className=\"groupBy\">\n        <h2> Group by: </h2>\n        <div>\n            <button> Continent </button>\n            <button> Language </button>\n        </div>\n    </div>\n\n    <div>\n        {countries.filter((val) => {\n            if (searchTerm === \"\") {\n                return \"\"\n            } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                return val\n            }\n        }).map((val, key) => {\n            return (\n                <div key={key}>\n                    <h2> {val.continent.name} </h2> \n                    <div className=\"countryInfo\">\n                        <div>\n                            <span>{val.emoji}</span>\n                            <h3> {val.name} </h3>\n                        </div>\n                        <p> Capital: {val.capital} </p>\n                        <p> Currency: {val.currency} </p>\n                    </div>\n                </div>\n            )\n        })\n        }\n    </div>\n</div>\n</div> */}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/CountrySearch/CountrySearch.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./CountrySearch.css\";\n\nconst CountrySearch = ({\n  countries\n}) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    Object.entries(countries.filter(c => c.name.toLowerCase().includes(searchTerm.toLowerCase())).reduce((res, c) => {\n      if (!res[c.continent.name]) {\n        res[c.continent.name] = [];\n      }\n\n      res[c.continent.name].push(c);\n      return res;\n    }, {}));\n  }, [searchTerm]); // const HandleGroupByLanguage = (val) => {\n  //  \n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Country Search\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \" Some random text \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search country...\",\n    onChange: event => {\n      setSearchTerm(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"groupBy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \" Group by: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \" Continent \"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \" Language \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CountrySearch;\n{\n  /* \n  <div className=\"search\">\n  <h1>Country Search</h1>\n  <span> Some random text </span>\n  <div className=\"searchResults\">\n     <input type=\"text\" placeholder=\"Search country...\" onChange={event => {\n         setSearchTerm(event.target.value)\n     }}/>\n     <div className=\"groupBy\">\n         <h2> Group by: </h2>\n         <div>\n             <button> Continent </button>\n             <button> Language </button>\n         </div>\n     </div>\n      <div>\n         {countries.filter((val) => {\n             if (searchTerm === \"\") {\n                 return \"\"\n             } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                 return val\n             }\n         }).map((val, key) => {\n             return (\n                 <div key={key}>\n                     <h2> {val.continent.name} </h2> \n                     <div className=\"countryInfo\">\n                         <div>\n                             <span>{val.emoji}</span>\n                             <h3> {val.name} </h3>\n                         </div>\n                         <p> Capital: {val.capital} </p>\n                         <p> Currency: {val.currency} </p>\n                     </div>\n                 </div>\n             )\n         })\n         }\n     </div>\n  </div>\n  </div> */\n}","map":{"version":3,"sources":["/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/CountrySearch/CountrySearch.js"],"names":["React","useEffect","useState","CountrySearch","countries","searchTerm","setSearchTerm","Object","entries","filter","c","name","toLowerCase","includes","reduce","res","continent","push","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AACrC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACC,OAAP,CACEJ,SAAS,CACNK,MADH,CACWC,CAAD,IACNA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8BR,UAAU,CAACO,WAAX,EAA9B,CAFJ,EAIGE,MAJH,CAIU,CAACC,GAAD,EAAML,CAAN,KAAY;AAClB,UAAI,CAACK,GAAG,CAACL,CAAC,CAACM,SAAF,CAAYL,IAAb,CAAR,EAA4B;AAC1BI,QAAAA,GAAG,CAACL,CAAC,CAACM,SAAF,CAAYL,IAAb,CAAH,GAAwB,EAAxB;AACD;;AACDI,MAAAA,GAAG,CAACL,CAAC,CAACM,SAAF,CAAYL,IAAb,CAAH,CAAsBM,IAAtB,CAA2BP,CAA3B;AACA,aAAOK,GAAP;AACD,KAVH,EAUK,EAVL,CADF;AAaD,GAdQ,EAcN,CAACV,UAAD,CAdM,CAAT,CAHqC,CAmBrC;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,mBAA/B;AAAmD,IAAA,QAAQ,EAAEa,KAAK,IAAI;AAClEZ,MAAAA,aAAa,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAFJ,CAJF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAHF,CADF;AA6BD,CApDD;;AAqDA,eAAejB,aAAf;AAQA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCS","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CountrySearch.css\";\n\nconst CountrySearch = ({countries}) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    Object.entries(\n      countries\n        .filter((c) =>\n          c.name.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n        .reduce((res, c) => {\n          if (!res[c.continent.name]) {\n            res[c.continent.name] = [];\n          }\n          res[c.continent.name].push(c);\n          return res;\n        }, {})\n    )\n  }, [searchTerm])\n\n  // const HandleGroupByLanguage = (val) => {\n  //  \n  // }\n\n  return (\n    <div className=\"search\">\n      <h1>Country Search</h1>\n      <span> Some random text </span>\n      <div className=\"searchResults\">\n        <input type=\"text\" placeholder=\"Search country...\" onChange={event => {\n            setSearchTerm(event.target.value)\n        }}/>\n        <div className=\"groupBy\">\n            <h2> Group by: </h2>\n            <div>\n                <button> Continent </button>\n                <button> Language </button>\n            </div>\n        </div>\n        <div>\n            {/* {countries.filter((val) => {\n              if (searchTerm === \"\") {\n                return \"\"\n              } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                setCountry(val)\n                HandleGroupByContinent();\n              }\n            })\n            } */}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default CountrySearch;\n\n\n\n\n\n\n\n{/* \n<div className=\"search\">\n<h1>Country Search</h1>\n<span> Some random text </span>\n<div className=\"searchResults\">\n    <input type=\"text\" placeholder=\"Search country...\" onChange={event => {\n        setSearchTerm(event.target.value)\n    }}/>\n    <div className=\"groupBy\">\n        <h2> Group by: </h2>\n        <div>\n            <button> Continent </button>\n            <button> Language </button>\n        </div>\n    </div>\n\n    <div>\n        {countries.filter((val) => {\n            if (searchTerm === \"\") {\n                return \"\"\n            } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                return val\n            }\n        }).map((val, key) => {\n            return (\n                <div key={key}>\n                    <h2> {val.continent.name} </h2> \n                    <div className=\"countryInfo\">\n                        <div>\n                            <span>{val.emoji}</span>\n                            <h3> {val.name} </h3>\n                        </div>\n                        <p> Capital: {val.capital} </p>\n                        <p> Currency: {val.currency} </p>\n                    </div>\n                </div>\n            )\n        })\n        }\n    </div>\n</div>\n</div> */}"]},"metadata":{},"sourceType":"module"}
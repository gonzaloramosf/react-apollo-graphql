{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/GetCountries/GetCountries.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { LIST_COUNTRIES } from \"../../GraphQL/Queries\";\nimport CountrySearch from \"../CountrySearch/CountrySearch\";\n\nconst GetCountries = () => {\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LIST_COUNTRIES);\n  const [isLoading, setIsLoading] = useState(false); // const [countries, setCountries] = useState([]);\n\n  const countries = [];\n  useEffect(() => {\n    if (loading) {\n      setIsLoading(true);\n    }\n\n    if (data) {\n      console.log(data);\n      data.countries.map(country => countries.push(country));\n      setIsLoading(false);\n    } else if (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  }, [error, loading, data, countries]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 26\n    }\n  }, \" loading... \") : /*#__PURE__*/React.createElement(CountrySearch, {\n    countries: countries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 48\n    }\n  }));\n};\n\nexport default GetCountries;","map":{"version":3,"sources":["/home/gonzalo/dev-challenge-kimche/dev-challenge-template-master/kimchechallenge/src/Components/GetCountries/GetCountries.js"],"names":["React","useEffect","useState","useQuery","LIST_COUNTRIES","CountrySearch","GetCountries","error","loading","data","isLoading","setIsLoading","countries","console","log","map","country","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAAyBN,QAAQ,CAACC,cAAD,CAAvC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C,CAFuB,CAGvB;;AACA,QAAMU,SAAS,GAAG,EAAlB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,OAAJ,EAAa;AACTG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,QAAIF,IAAJ,EAAU;AACNI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAA,MAAAA,IAAI,CAACG,SAAL,CAAeG,GAAf,CAAmBC,OAAO,IACtBJ,SAAS,CAACK,IAAV,CAAeD,OAAf,CADJ;AAGAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAND,MAMO,IAAIJ,KAAJ,EAAW;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAI,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAfQ,EAeN,CAACJ,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,EAAuBG,SAAvB,CAfM,CAAT;AAiBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,gBAAyB,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEE,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvC,CADJ;AAKH,CA5BD;;AA6BA,eAAeN,YAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {LIST_COUNTRIES} from \"../../GraphQL/Queries\";\nimport CountrySearch from \"../CountrySearch/CountrySearch\";\n\nconst GetCountries = () => {\n    const {error, loading, data} = useQuery(LIST_COUNTRIES);\n    const [isLoading, setIsLoading] = useState(false);\n    // const [countries, setCountries] = useState([]);\n    const countries = [];\n\n    useEffect(() => {\n        if (loading) {\n            setIsLoading(true);\n        }\n\n        if (data) {\n            console.log(data)\n            data.countries.map(country => (\n                countries.push(country)\n            ))\n            setIsLoading(false);\n        } else if (error) {\n            console.log(error);\n            setIsLoading(false);\n        }\n    }, [error, loading, data, countries])\n\n    return(\n        <div> \n            {isLoading ? <p> loading... </p> : <CountrySearch countries={countries}/>}\n        </div>\n    ) \n};\nexport default GetCountries;"]},"metadata":{},"sourceType":"module"}